@mixin filter-none() {
    -webkit-filter: none;
    filter: none;
}

@mixin filter-grayscale($amount: 1) {
    -webkit-filter: grayscale($amount);
    @if (unit($amount) == "%") {
        $amount: $amount / 100%;
    }
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22grayscale%22%3E%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%22#{0.2126+0.7874*(1-$amount)} #{(0.7152- 0.7152*(1-$amount))} #{0.0722- 0.0722*(1-$amount)} 0 0,#{0.2126- 0.2126*(1-$amount)} #{0.7152+0.2848*(1-$amount)} #{0.0722- 0.0722*(1-$amount)} 0 0,#{0.2126- 0.2126*(1-$amount)} #{0.7152- 0.7152*(1-$amount)} #{0.0722+0.9278*(1-$amount)} 0 0,0 0 0 1 0%22/%3E%3C/filter%3E%3C/svg%3E#grayscale");
}

@mixin filter-sepia($amount: 1) {
    -webkit-filter: sepia($amount);
    @if (unit($amount) == "%") {
        $amount: $amount / 100%;
    }
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22sepia%22%3E%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%22#{0.393+0.607*(1-$amount)} #{0.769- 0.769*(1-$amount)} #{0.189- 0.189*(1-$amount)} 0 0,#{0.349- 0.349*(1-$amount)} #{0.686+0.314*(1-$amount)} #{0.168- 0.168*(1-$amount)} 0 0,#{0.272- 0.272*(1-$amount)} #{0.534- 0.534*(1-$amount)} #{0.131+0.869*(1-$amount)} 0 0,0 0 0 1 0%22/%3E%3C/filter%3E%3C/svg%3E#sepia");
}

@mixin filter-saturate($amount: 1) {
    -webkit-filter: saturate($amount);
    @if (unit($amount) == "%") {
        $amount: $amount / 100%;
    }
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22desaturate%22%3E%3CfeColorMatrix%20type%3D%22saturate%22%20values%3D%22#{1-$amount}%22/%3E%3C/filter%3E%3C/svg%3E#desaturate");
}

@mixin filter-hue-rotate($angle: 0deg) {
    -webkit-filter: hue-rotate($angle);
    $angle: $angle / 1deg;
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22hue-rotate%22%3E%3CfeColorMatrix%20type%3D%22hueRotate%22%20values%3D%22#{$angle}%22/%3E%3C/filter%3E%3C/svg%3E#hue-rotate");
}

@mixin filter-invert($amount: 1) {
    -webkit-filter: invert($amount);
    @if (unit($amount) == "%") {
        $amount: $amount / 100%;
    }
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22invert%22%3E%3CfeComponentTransfer%3E%3CfeFuncR%20type%3D%22table%22%20tableValues%3D%22#{$amount} #{1-$amount}%22/%3E%3CfeFuncG%20type%3D%22table%22%20tableValues%3D%22#{$amount} #{1-$amount}%22/%3E%3CfeFuncB%20type%3D%22table%22%20tableValues%3D%22#{$amount} #{1-$amount}%22/%3E%3C/feComponentTransfer%3E%3C/filter%3E%3C/svg%3E#invert");
}

@mixin filter-opacity($amount: 1) {
    -webkit-filter: opacity($amount);
    @if (unit($amount) == "%") {
        $amount: $amount / 100%;
    }
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22opacity%22%3E%3CfeComponentTransfer%3E%3CfeFuncA%20type%3D%22table%22%20tableValues%3D%220 #{$amount}%22/%3E%3C/feComponentTransfer%3E%3C/filter%3E%3C/svg%3E#opacity");
}

@mixin filter-brightness($amount: 1) {
    -webkit-filter: brightness($amount);
    @if (unit($amount) == "%") {
        $amount: $amount / 100%;
    }
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22brightness%22%3E%3CfeComponentTransfer%3E%3CfeFuncR%20type%3D%22linear%22%20slope%3D%22#{$amount}%22/%3E%3CfeFuncG%20type%3D%22linear%22%20slope%3D%22#{$amount}%22/%3E%3CfeFuncB%20type%3D%22linear%22%20slope%3D%22#{$amount}%22/%3E%3C/feComponentTransfer%3E%3C/filter%3E%3C/svg%3E#brightness");
}

@mixin filter-contrast($amount: 1) {
    -webkit-filter: contrast($amount);
    @if (unit($amount) == "%") {
        $amount: $amount / 100%;
    }
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22contrast%22%3E%3CfeComponentTransfer%3E%3CfeFuncR%20type%3D%22linear%22%20slope%3D%22#{$amount}%22%20intercept%3D%22#{-0.5*$amount+0.5}%22/%3E%3CfeFuncG%20type%3D%22linear%22%20slope%3D%22#{$amount}%22%20intercept%3D%22#{-0.5*$amount+0.5}%22/%3E%3CfeFuncB%20type%3D%22linear%22%20slope%3D%22#{$amount}%22%20intercept%3D%22#{-0.5*$amount+0.5}%22/%3E%3C/feComponentTransfer%3E%3C/filter%3E%3C/svg%3E#contrast");
}

@mixin filter-blur($radius: 0px) {
    -webkit-filter: blur($radius);
    $radius: $radius / 1px;
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22blur%22%3E%3CfeGaussianBlur%20stdDeviation%3D%22#{$radius}%22/%3E%3C/filter%3E%3C/svg%3E#blur");
}

@mixin filter-drop-shadow($shadow) {
    -webkit-filter: drop-shadow($shadow);
    $offset-x: nth($shadow, 1) / 1px;
    $offset-y: nth($shadow, 2) / 1px;
    $blur-radius: if(length($shadow) > 2, nth($shadow, 3) / 1px, 0);
    $color: if(length($shadow) > 3, nth($shadow, 4), transparent);
    filter: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cfilter%20id%3D%22drop-shadow%22%3E%3CfeGaussianBlur%20in%3D%22SourceAlpha%22%20stdDeviation%3D%22#{$blur-radius}%22/%3E%3CfeOffset%20dx%3D%22#{$offset-x}%22%20dy%3D%22#{$offset-y}%22%20result%3D%22offsetblur%22/%3E%3CfeFlood%20flood-color%3D%22#{$color}%22/%3E%3CfeComposite%20in2%3D%22offsetblur%22%20operator%3D%22in%22/%3E%3CfeMerge%3E%3CfeMergeNode/%3E%3CfeMergeNode%20in%3D%22SourceGraphic%22/%3E%3C/feMerge%3E%3C/filter%3E%3C/svg%3E#drop-shadow");
}
